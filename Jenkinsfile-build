library("tdr-jenkinslib")

def versionTag = "v${env.BUILD_NUMBER}"
def repo = "tdr-auth-server"

pipeline {
    agent {
      label "master"
    }

  stages {
    stage("Run git secrets") {
      steps {
        script {
          tdr.runGitSecrets(repo)
        }
      }
    }
    stage('Check Docker image build') {
      stages {
        stage('Build artifacts') {
          parallel {
            stage('Build Theme') {
              agent {
                ecs {
                  inheritFrom 'npm'
                }
              }
              steps {
                script {
                  tdr.reportStartOfBuildToGitHub(repo, env.GIT_COMMIT)
                }
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], userRemoteConfigs: [[url: 'https://github.com/UKHomeOffice/keycloak-theme-govuk.git']]])
                sh 'npm install'
                sh 'npm run build'
                stash includes: "govuk/**", name: "govuk"
              }
            }
          }
        }
        stage('Build docker image') {
          steps {
            sh "rm -rf target"
            unstash 'govuk'
            sshagent(['github-jenkins']) {
              sh("git clone --branch master git@github.com:nationalarchives/tdr-configurations.git")
              sh("cp tdr-configurations/keycloak/tdr-realm-export.json .")
            }
            script {
              def imageTag = "${env.MANAGEMENT_ACCOUNT}.dkr.ecr.eu-west-2.amazonaws.com/${imageName}:${stage}"
                sh "aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin ${env.MANAGEMENT_ACCOUNT}.dkr.ecr.eu-west-2.amazonaws.com"
                sh "docker build -t ${imageTag} ."
            }
          }
          post {
            always {
              sh("rm -rf tdr-configurations")
            }
          }
        }
      }
    }
    stage('Post-build') {
      when {
        expression {
          env.BRANCH_NAME == "master"
        }
      }
      stages {
        stage('Push docker image') {
          steps {
            sh "rm -rf target"
            unstash 'govuk'
            script {
              tdr.buildAndPushImage("auth-server", versionTag)
              tdr.postToDaTdrSlackChannel(
                  colour: "good",
                  message: "*Auth server* :whale: The Keycloak auth app has been pushed to AWS ECR"
              )
            }
          }
        }
        stage('Deploy to integration') {
          steps {
            build(
              job: "TDR Auth Server Deploy",
                parameters: [
                  string(name: "STAGE", value: "intg"),
                  string(name: "TO_DEPLOY", value: versionTag)
                ],
                wait: false)
          }
        }
        stage('Tag Release') {
          steps {
            sh "git tag ${versionTag}"
            sshagent(['github-jenkins']) {
              sh("git push origin ${versionTag}")
            }
          }
        }
      }
    }
  }
  post {
      failure {
        node('master') {
          script {
            tdr.reportFailedBuildToGitHub(repo, env.GIT_COMMIT)
          }
        }
      }
      success {
        node('master') {
          script {
            tdr.reportSuccessfulBuildToGitHub(repo, env.GIT_COMMIT)
          }
        }
      }
  }
}
